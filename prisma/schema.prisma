// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output = "node_modules/@prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String
  lastname String
  email String @unique
  password String
  genreId Int

  genre Genre @relation(fields: [genreId], references: [id])
  transactions Transaction[]
  categories Category[]
}

model Transaction {
  id Int @id @default(autoincrement())
  amount Decimal @db.Decimal(10, 2)
  categoryId Int
  description String?
  date DateTime
  typeId Int
  userId Int

   
  category Category @relation(fields: [categoryId], references: [id])
  type Type @relation(fields: [typeId], references: [id])
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Category {
    id Int @id @default(autoincrement())
    name String
    typeId Int
    userId Int


    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    type Type @relation(fields: [typeId], references: [id])
    transactions Transaction[]
}

model Type {
    id Int @id @default(autoincrement())
    name String @unique

    
    transactions Transaction[]
    categories Category[]
}

model Genre {
  id Int @id @default(autoincrement())
  name String @unique

  users User[]
}